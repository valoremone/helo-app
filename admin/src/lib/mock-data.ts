import { addDays } from 'date-fns';
import { Aircraft } from '@/types/bookings';
import { Booking } from '@/types/bookings';
import { Customer } from '@/types/bookings';
import { MaintenanceRecord } from '@/types/bookings';
import { User } from '@/types/bookings';
// Mock data for development and testing
// Mock bookings
export const mockBookings: Booking[] = [
  {
    id: "book-001",
    status: "confirmed",
    aircraftId: "ac-001",
    aircraftName: "Cessna Citation X",
    customerId: "cust-001",
    customerName: "John Doe",
    customerEmail: "john.doe@example.com",
    type: "charter",
    passengers: 4,
    departure: {
      location: "New York (JFK)",
      time: new Date(new Date().setHours(10, 0, 0, 0)).toISOString(),
    },
    arrival: {
      location: "Los Angeles (LAX)",
      time: new Date(new Date().setHours(14, 0, 0, 0)).toISOString(),
    },
    price: 12500,
    paymentStatus: "paid",
    notes: "Client requested champagne service",
    createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: "book-002",
    status: "pending",
    aircraftId: "ac-002",
    aircraftName: "Gulfstream G650",
    customerId: "cust-002",
    customerName: "Jane Smith",
    customerEmail: "jane.smith@example.com",
    type: "charter",
    passengers: 8,
    departure: {
      location: "Miami (MIA)",
      time: addDays(new Date(), 3).toISOString(),
    },
    arrival: {
      location: "New York (JFK)",
      time: addDays(new Date(), 3).toISOString(),
    },
    price: 18000,
    paymentStatus: "pending",
    createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: "book-003",
    status: "completed",
    aircraftId: "ac-003",
    aircraftName: "Bombardier Global 7500",
    customerId: "cust-003",
    customerName: "Robert Johnson",
    customerEmail: "robert.johnson@example.com",
    type: "shuttle",
    passengers: 12,
    departure: {
      location: "London (LHR)",
      time: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    },
    arrival: {
      location: "Paris (CDG)",
      time: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    },
    price: 22000,
    paymentStatus: "paid",
    notes: "Corporate group booking",
    createdAt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: "book-004",
    status: "in-progress",
    aircraftId: "ac-001",
    aircraftName: "Cessna Citation X",
    customerId: "cust-004",
    customerName: "Emily Chen",
    customerEmail: "emily.chen@example.com",
    type: "tour",
    passengers: 2,
    departure: {
      location: "San Francisco (SFO)",
      time: new Date().toISOString(),
    },
    arrival: {
      location: "San Francisco (SFO)",
      time: new Date(new Date().setHours(new Date().getHours() + 3)).toISOString(),
    },
    price: 5500,
    paymentStatus: "partial",
    notes: "Scenic tour of Bay Area",
    createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: "book-005",
    status: "cancelled",
    aircraftId: "ac-002",
    aircraftName: "Gulfstream G650",
    customerId: "cust-005",
    customerName: "Michael Williams",
    customerEmail: "michael.williams@example.com",
    type: "charter",
    passengers: 6,
    departure: {
      location: "Chicago (ORD)",
      time: addDays(new Date(), 1).toISOString(),
    },
    arrival: {
      location: "Washington DC (IAD)",
      time: addDays(new Date(), 1).toISOString(),
    },
    price: 9500,
    paymentStatus: "refunded",
    notes: "Cancelled due to weather conditions",
    createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    updatedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
  },
];

// Mock User data
export const mockUsers: User[] = [
  {
    id: "usr-admin",
    name: "HELO Admin",
    email: "admin@flyhelo.one",
    role: "admin",
    status: "active",
    membershipTier: "PLATINUM",
    lastActive: new Date().toISOString(),
  },
  {
    id: "usr-member",
    name: "HELO Member",
    email: "member@flyhelo.one",
    role: "member",
    status: "active",
    membershipTier: "ELITE",
    lastActive: new Date().toISOString(),
  },
  {
    id: "usr-001",
    name: "John Admin",
    email: "john.admin@example.com",
    role: "admin",
    status: "active",
    membershipTier: "PLATINUM",
    lastActive: new Date().toISOString(),
  },
  {
    id: "usr-002",
    name: "Jane Member",
    email: "jane.member@example.com",
    role: "member",
    status: "active",
    membershipTier: "ELITE",
    lastActive: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: "usr-003",
    name: "Robert Inactive",
    email: "robert.inactive@example.com",
    role: "member",
    status: "inactive",
    membershipTier: "STANDARD",
    lastActive: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
  },
];

// Mock customers
export const mockCustomers: Customer[] = [
  {
    id: "cust-001",
    name: "John Doe",
    email: "john.doe@example.com",
    phone: "+1 (555) 123-4567",
    membershipTier: "PLATINUM",
    totalSpent: 250000,
    bookingsCount: 12,
    lastBooking: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),
    joinDate: new Date(Date.now() - 365 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: "cust-002",
    name: "Jane Smith",
    email: "jane.smith@example.com",
    phone: "+1 (555) 987-6543",
    membershipTier: "ELITE",
    totalSpent: 120000,
    bookingsCount: 8,
    lastBooking: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),
    joinDate: new Date(Date.now() - 300 * 24 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: "cust-003",
    name: "Robert Johnson",
    email: "robert.johnson@example.com",
    phone: "+1 (555) 456-7890",
    membershipTier: "BLACK",
    totalSpent: 350000,
    bookingsCount: 20,
    lastBooking: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    joinDate: new Date(Date.now() - 450 * 24 * 60 * 60 * 1000).toISOString(),
  },
];

// Mock aircraft
export const mockAircraft: Aircraft[] = [
  {
    id: "ac-001",
    name: "Cessna Citation X",
    type: "Light Jet",
    registration: "N123CS",
    capacity: 8,
    range: 3500,
    status: "available",
    nextMaintenance: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
    lastMaintenance: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString(),
    imageUrl: "https://images.unsplash.com/photo-1540962351504-03099e0a754b?auto=format&fit=crop&w=600&q=60",
  },
  {
    id: "ac-002",
    name: "Gulfstream G650",
    type: "Heavy Jet",
    registration: "N456GS",
    capacity: 16,
    range: 7000,
    status: "in-use",
    nextMaintenance: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000).toISOString(),
    lastMaintenance: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000).toISOString(),
    imageUrl: "https://images.unsplash.com/photo-1533181507293-0dec9ca8f3ef?auto=format&fit=crop&w=600&q=60",
  },
  {
    id: "ac-003",
    name: "Bombardier Global 7500",
    type: "Ultra Long Range",
    registration: "N789BD",
    capacity: 14,
    range: 8000,
    status: "maintenance",
    nextMaintenance: new Date(Date.now() + 75 * 24 * 60 * 60 * 1000).toISOString(),
    lastMaintenance: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    imageUrl: "https://images.unsplash.com/photo-1608228088998-57828365d486?auto=format&fit=crop&w=600&q=60",
  },
];

// Mock maintenance records
export const mockMaintenanceRecords: MaintenanceRecord[] = [
  {
    id: "maint-001",
    aircraftId: "ac-001",
    title: "Routine Engine Inspection",
    description: "Standard 500-hour engine inspection and maintenance",
    type: "scheduled",
    status: "completed",
    startDate: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString(),
    endDate: new Date(Date.now() - 58 * 24 * 60 * 60 * 1000).toISOString(),
    cost: 12500,
    technician: "John Smith",
    notes: "All systems operating within normal parameters",
  },
  {
    id: "maint-002",
    aircraftId: "ac-002",
    title: "Avionics System Upgrade",
    description: "Install latest navigation and communication systems",
    type: "scheduled",
    status: "planned",
    startDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000).toISOString(),
    endDate: new Date(Date.now() + 12 * 24 * 60 * 60 * 1000).toISOString(),
    cost: 35000,
    technician: "Sarah Johnson",
  },
  {
    id: "maint-003",
    aircraftId: "ac-003",
    title: "Emergency Landing Gear Repair",
    description: "Repair hydraulic system for landing gear extension",
    type: "unscheduled",
    status: "in-progress",
    startDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    endDate: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toISOString(),
    cost: 18750,
    technician: "Michael Brown",
    notes: "Parts on order, expected delivery tomorrow",
  },
];